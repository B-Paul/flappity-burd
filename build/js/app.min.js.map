{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","site/js/components/collisions/circle.js","app.min.js","site/js/components/collisions/rectangle.js","site/js/components/graphics/burd.js","site/js/components/graphics/pipe.js","site/js/components/physics/physics.js","site/js/entities/burd.js","site/js/entities/pipe.js","site/js/flappity-burd.js","site/js/main.js","site/js/systems/collisions.js","site/js/systems/graphics.js","site/js/systems/input.js","site/js/systems/obstacles.js","site/js/systems/physics.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","CircleCollisionComponent","entity","radius","this","size","x","y","type","prototype","collidesWith","components","collisions","collideCircle","collideRect","positionA","physics","position","positionB","radiusA","radiusB","diff","distanceSquared","radiusSum","sizeA","sizeB","leftA","rightA","bottomA","topA","leftB","rightB","bottomB","topB",2,"RectCollisionComponent","clamp","value","low","high","closest",3,"BurdGraphicsComponent","draw","context","save","translate","beginPath","arc","Math","PI","fill","closePath","restore",4,"PipeGraphicsComponent","width","height","gap","fillStyle","fillRect",5,"PhysicsComponent","velocity","acceleration","update","delta",6,"Burd","graphics","onCollision","bind","console","log","../components/collisions/circle","../components/graphics/burd","../components/physics/physics",7,"Pipe","startX","startY","../components/collisions/rectangle","../components/graphics/pipe",8,"GraphicsSystem","PhysicsSystem","InputSystem","ObstacleSystem","FlappityBurd","canvas","entities","input","obstacles","run","./entities/burd","./systems/graphics","./systems/input","./systems/obstacles","./systems/physics",9,"document","addEventListener","getElementById","app","./flappity-burd",10,"CollisionSystem","tick","entityA","j","entityB",11,"global","getContext","recur","requestAnimationFrame","cb","_this","offsetWith","offsetHeight","offsetWidth","clearRect","scale","forEach","self","window",12,"onClick","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","burd","evt","preventDefault","touching",13,"setInterval","aspectRatio","random","push","ent","splice","../entities/pipe",14,"./collisions"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar CircleCollisionComponent = function (entity, radius) {\n  this.entity = entity;\n  this.radius = radius;\n  this.size = {x: radius, y: radius};\n  this.type = 'circle';\n};\n\nCircleCollisionComponent.prototype.collidesWith = function (entity) {\n  if (entity.components.collisions.type === 'circle') {\n    return this.collideCircle(entity);\n  }\n  else if (entity.components.collisions.type === 'rect') {\n    return this.collideRect(entity);\n  }\n  return false;\n};\n\nCircleCollisionComponent.prototype.collideCircle = function (entity) {\n  var positionA = this.entity.components.physics.position,\n      positionB = entity.components.physics.position;\n\n  var radiusA = this.radius,\n      radiusB = entity.components.collisions.radius;\n\n  var diff = {x: positionA.x - positionB.x,\n              y: positionA.y - positionB.y};\n\n  var distanceSquared = diff.x * diff.x + diff.y * diff.y;\n  var radiusSum = radiusA + radiusB;\n\n  return distanceSquared < radiusSum * radiusSum;\n};\n\nCircleCollisionComponent.prototype.collideRect = function (entity) {\n  var positionA = this.entity.components.physics.position,\n      positionB = entity.components.physics.position;\n\n  var sizeA = this.size,\n      sizeB = entity.components.collisions.size;\n\n  var leftA = positionA.x - sizeA.x / 2;\n  var rightA = positionA.x + sizeA.x / 2;\n  var bottomA = positionA.y - sizeA.y / 2;\n  var topA = positionA.y + sizeA.y / 2;\n\n  var leftB = positionB.x - sizeB.x / 2;\n  var rightB = positionB.x + sizeB.x / 2;\n  var bottomB = positionB.y - sizeB.y / 2;\n  var topB = positionB.y + sizeB.y / 2;\n\n  return !(leftA > rightB || leftB > rightA ||\n           bottomA > topB || bottomB > topA);\n};\n\nmodule.exports = CircleCollisionComponent;\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar CircleCollisionComponent = function CircleCollisionComponent(entity, radius) {\n  this.entity = entity;\n  this.radius = radius;\n  this.size = { x: radius, y: radius };\n  this.type = 'circle';\n};\n\nCircleCollisionComponent.prototype.collidesWith = function (entity) {\n  if (entity.components.collisions.type === 'circle') {\n    return this.collideCircle(entity);\n  } else if (entity.components.collisions.type === 'rect') {\n    return this.collideRect(entity);\n  }\n  return false;\n};\n\nCircleCollisionComponent.prototype.collideCircle = function (entity) {\n  var positionA = this.entity.components.physics.position,\n      positionB = entity.components.physics.position;\n\n  var radiusA = this.radius,\n      radiusB = entity.components.collisions.radius;\n\n  var diff = { x: positionA.x - positionB.x,\n    y: positionA.y - positionB.y };\n\n  var distanceSquared = diff.x * diff.x + diff.y * diff.y;\n  var radiusSum = radiusA + radiusB;\n\n  return distanceSquared < radiusSum * radiusSum;\n};\n\nCircleCollisionComponent.prototype.collideRect = function (entity) {\n  var positionA = this.entity.components.physics.position,\n      positionB = entity.components.physics.position;\n\n  var sizeA = this.size,\n      sizeB = entity.components.collisions.size;\n\n  var leftA = positionA.x - sizeA.x / 2;\n  var rightA = positionA.x + sizeA.x / 2;\n  var bottomA = positionA.y - sizeA.y / 2;\n  var topA = positionA.y + sizeA.y / 2;\n\n  var leftB = positionB.x - sizeB.x / 2;\n  var rightB = positionB.x + sizeB.x / 2;\n  var bottomB = positionB.y - sizeB.y / 2;\n  var topB = positionB.y + sizeB.y / 2;\n\n  return !(leftA > rightB || leftB > rightA || bottomA > topB || bottomB > topA);\n};\n\nmodule.exports = CircleCollisionComponent;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar RectCollisionComponent = function RectCollisionComponent(entity, size) {\n  this.entity = entity;\n  this.size = size;\n  this.type = 'rect';\n};\n\nRectCollisionComponent.prototype.collidesWith = function (entity) {\n  if (entity.components.collisions.type === 'circle') {\n    return this.collideCircle(entity);\n  } else if (entity.components.collisions.type === 'rect') {\n    return this.collideRect(entity);\n  }\n  return false;\n};\n\nRectCollisionComponent.prototype.collideCircle = function (entity) {\n  return entity.components.collisions.collideRect(this.entity);\n};\n\nRectCollisionComponent.prototype.collideRect = function (entity) {\n  var clamp = function clamp(value, low, high) {\n    if (value < low) {\n      return low;\n    }\n    if (value > high) {\n      return high;\n    }\n    return value;\n  };\n\n  var positionA = this.entity.components.physics.position;\n  var positionB = entity.components.physics.position;\n  var sizeB = entity.components.collisions.size;\n\n  var closest = {\n    x: clamp(positionA.x, positionB.x - sizeB.x / 2, positionB.x + sizeB.x / 2),\n    y: clamp(positionA.y, positionB.y - sizeB.y / 2, positionB.y + sizeB.y / 2)\n  };\n\n  var radiusA = this.radius;\n\n  var diff = { x: positionA.x - closest.x,\n    y: positionA.y - closest.y };\n\n  var distanceSquared = diff.x * diff.x + diff.y * diff.y;\n  return distanceSquared < radiusA * radiusA;\n};\n\nmodule.exports = RectCollisionComponent;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar BurdGraphicsComponent = function BurdGraphicsComponent(entity) {\n  this.entity = entity;\n};\n\nBurdGraphicsComponent.prototype.draw = function (context) {\n  var position = this.entity.components.physics.position;\n\n  context.save();\n  context.translate(position.x, position.y);\n  context.beginPath();\n  context.arc(0, 0.5, this.entity.radius, 0, 2 * Math.PI);\n  context.fill();\n  context.closePath();\n  context.restore();\n};\n\nmodule.exports = BurdGraphicsComponent;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar PipeGraphicsComponent = function PipeGraphicsComponent(entity) {\n  this.entity = entity;\n};\n\nPipeGraphicsComponent.prototype.draw = function (context) {\n  var position = this.entity.components.physics.position,\n      width = this.entity.width,\n      height = this.entity.height,\n      gap = this.entity.gap;\n\n  context.save();\n  context.translate(position.x - width / 2, 0);\n  context.fillStyle = 'green';\n  context.fillRect(position.x, position.y, width, height);\n  context.restore();\n};\n\nmodule.exports = PipeGraphicsComponent;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar PhysicsComponent = function PhysicsComponent(entity) {\n  this.entity = entity;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n  this.velocity = {\n    x: 0,\n    y: 0\n  };\n  this.acceleration = {\n    x: 0,\n    y: 0\n  };\n};\n\nPhysicsComponent.prototype.update = function (delta) {\n  this.velocity.x += this.acceleration.x * delta;\n  this.velocity.y += this.acceleration.y * delta;\n\n  this.position.x += this.velocity.x * delta;\n  this.position.y += this.velocity.y * delta;\n};\n\nmodule.exports = PhysicsComponent;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar BurdGraphicsComponent = require('../components/graphics/burd'),\n    PhysicsComponent = require('../components/physics/physics'),\n    CircleCollisionComponent = require('../components/collisions/circle');\n\nvar Burd = function Burd() {\n  this.radius = 0.02;\n\n  this.components = {\n    graphics: new BurdGraphicsComponent(this),\n    physics: new PhysicsComponent(this),\n    collisions: new CircleCollisionComponent(this, this.radius)\n  };\n\n  this.components.physics.position.y = 0.5;\n  this.components.physics.acceleration.y = -2;\n  this.components.collisions.onCollision = this.onCollision.bind(this);\n};\n\nBurd.prototype.onCollision = function (entity) {\n  console.log('Burd collided with entity:', entity);\n};\n\nmodule.exports = Burd;\n\n},{\"../components/collisions/circle\":1,\"../components/graphics/burd\":3,\"../components/physics/physics\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar PipeGraphicsComponent = require('../components/graphics/pipe'),\n    PhysicsComponent = require('../components/physics/physics'),\n    RectCollisionComponent = require('../components/collisions/rectangle');\n\nvar Pipe = function Pipe(startX, startY, height) {\n  this.height = height;\n  this.width = 0.15;\n\n  this.components = {\n    graphics: new PipeGraphicsComponent(this),\n    physics: new PhysicsComponent(this),\n    collisions: new RectCollisionComponent(this, { x: this.width, y: this.height })\n  };\n\n  this.components.physics.position.x = startX + this.width / 2;\n  this.components.physics.position.y = startY;\n  this.components.physics.velocity.x = -0.3;\n  this.components.collisions.onCollision = this.onCollision.bind(this);\n};\n\nPipe.prototype.onCollision = function (entity) {\n  console.log('Pipe collided with entity:', entity);\n};\n\nmodule.exports = Pipe;\n\n},{\"../components/collisions/rectangle\":2,\"../components/graphics/pipe\":4,\"../components/physics/physics\":5}],8:[function(require,module,exports){\n'use strict';\n\nvar GraphicsSystem = require('./systems/graphics'),\n    PhysicsSystem = require('./systems/physics'),\n    InputSystem = require('./systems/input'),\n    ObstacleSystem = require('./systems/obstacles'),\n    Burd = require('./entities/burd');\n\nvar FlappityBurd = function FlappityBurd(canvas) {\n  this.entities = [new Burd()];\n  this.graphics = new GraphicsSystem(this.entities, canvas);\n  this.physics = new PhysicsSystem(this.entities);\n  this.input = new InputSystem(this.entities, canvas);\n  this.obstacles = new ObstacleSystem(this.entities, canvas);\n};\n\nFlappityBurd.prototype.run = function () {\n  this.graphics.run();\n  this.physics.run();\n  this.input.run();\n  this.obstacles.run();\n};\n\nmodule.exports = FlappityBurd;\n\n},{\"./entities/burd\":6,\"./systems/graphics\":11,\"./systems/input\":12,\"./systems/obstacles\":13,\"./systems/physics\":14}],9:[function(require,module,exports){\n'use strict';\n\nvar FlappityBurd = require('./flappity-burd');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var canvas = document.getElementById('main-canvas'),\n      app = new FlappityBurd(canvas);\n  app.run();\n});\n\n},{\"./flappity-burd\":8}],10:[function(require,module,exports){\n'use strict';\n\nvar CollisionSystem = function CollisionSystem(entities) {\n  this.entities = entities;\n};\n\nCollisionSystem.prototype.tick = function () {\n  for (var i = 0; i < this.entities.length; i++) {\n    var entityA = this.entities[i];\n    if (!'collision' in entityA.components) {\n      continue;\n    }\n\n    for (var j = i + 1; j < this.entities.length; j++) {\n      var entityB = this.entities[j];\n      if (!'collisions' in entityB.components) {\n        continue;\n      }\n\n      if (!entityA.components.collisions.collidesWith(entityB)) {\n        continue;\n      }\n\n      if (entityA.components.collisions.onCollision) {\n        entityA.components.collisions.onCollision(entityB);\n      }\n\n      if (entityB.components.collisions.onCollision) {\n        entityB.components.collisions.onCollision(entityA);\n      }\n    }\n  }\n};\n\nmodule.exports = CollisionSystem;\n\n},{}],11:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar GraphicsSystem = function GraphicsSystem(entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n  this.context = canvas.getContext('2d');\n};\n\nGraphicsSystem.prototype.run = function () {\n  var tick = this.tick.bind(this);\n  (function recur() {\n    global.requestAnimationFrame(function (t) {\n      tick(t, recur);\n    });\n  })();\n};\n\nGraphicsSystem.prototype.tick = function (t, cb) {\n  var _this = this;\n\n  // Blank slate.\n  if (this.canvas.width !== this.canvas.offsetWith || this.canvas.height !== this.canvas.offsetHeight) {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n  }\n  this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  this.context.save();\n  this.context.translate(this.canvas.width / 2, this.canvas.height);\n  this.context.scale(this.canvas.height, -this.canvas.height);\n\n  // Render.\n  this.entities.forEach(function (entity) {\n    if (!entity.components || !entity.components.graphics) {\n      return;\n    }\n    entity.components.graphics.draw(_this.context);\n  });\n\n  this.context.restore();\n\n  cb();\n};\n\nmodule.exports = GraphicsSystem;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar InputSystem = function InputSystem(entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n};\n\nInputSystem.prototype.run = function () {\n  this.canvas.addEventListener('click', this.onClick.bind(this));\n  this.canvas.addEventListener('touchstart', this.onTouchStart.bind(this));\n  this.canvas.addEventListener('touchend', this.onTouchEnd.bind(this));\n  this.canvas.addEventListener('touchmove', this.onTouchMove.bind(this));\n  this.canvas.addEventListener('touchcancel', this.onTouchCancel.bind(this));\n};\n\nInputSystem.prototype.onClick = function () {\n  var burd = this.entities[0];\n  burd.components.physics.velocity.y = 0.5;\n};\n\nInputSystem.prototype.onTouchStart = function (evt) {\n  evt.preventDefault();\n  this.touching || this.onClick();\n  this.touching = true;\n};\n\nInputSystem.prototype.onTouchEnd = function (evt) {\n  evt.preventDefault();\n  this.touching = false;\n};\n\nInputSystem.prototype.onTouchMove = function (evt) {\n  evt.preventDefault();\n};\n\nInputSystem.prototype.onTouchCancel = function (evt) {\n  evt.preventDefault();\n  this.touching = false;\n};\n\nmodule.exports = InputSystem;\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nvar Pipe = require('../entities/pipe');\n\nvar ObstacleSystem = function ObstacleSystem(entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n};\n\nObstacleSystem.prototype.run = function () {\n  window.setInterval(this.tick.bind(this), 1000 * 2);\n};\n\nObstacleSystem.prototype.tick = function () {\n  var _this = this;\n\n  var aspectRatio = this.canvas.width / 2 / this.canvas.height,\n      height = Math.random(),\n      gap = 0.15;\n  this.entities.push(new Pipe(aspectRatio, 0, height));\n  this.entities.push(new Pipe(aspectRatio, height + gap, 1 - (height + gap)));\n  this.entities.forEach(function (ent, i) {\n    if (ent.components.physics.position.x < -aspectRatio) {\n      _this.entities.splice(i, 1);\n    }\n  });\n};\n\nmodule.exports = ObstacleSystem;\n\n},{\"../entities/pipe\":7}],14:[function(require,module,exports){\n'use strict';\n\nvar CollisionSystem = require('./collisions');\n\nvar PhysicsSystem = function PhysicsSystem(entities) {\n  this.entities = entities;\n  this.collisions = new CollisionSystem(entities);\n};\n\nPhysicsSystem.prototype.run = function () {\n  window.setInterval(this.tick.bind(this), 1000 / 60);\n};\n\nPhysicsSystem.prototype.tick = function () {\n  this.entities.forEach(function (entity) {\n    if (!entity.components || !entity.components.physics) {\n      return;\n    }\n    entity.components.physics.update(1 / 60);\n  });\n  this.collisions.tick();\n};\n\nmodule.exports = PhysicsSystem;\n\n},{\"./collisions\":10}]},{},[9])\n\n","'use strict';\n\nvar RectCollisionComponent = function (entity, size) {\n  this.entity = entity;\n  this.size = size;\n  this.type = 'rect';\n};\n\nRectCollisionComponent.prototype.collidesWith = function (entity) {\n  if (entity.components.collisions.type === 'circle') {\n    return this.collideCircle(entity);\n  }\n  else if (entity.components.collisions.type === 'rect') {\n    return this.collideRect(entity);\n  }\n  return false;\n};\n\nRectCollisionComponent.prototype.collideCircle = function (entity) {\n  return entity.components.collisions.collideRect(this.entity);\n};\n\nRectCollisionComponent.prototype.collideRect = function (entity) {\n  var clamp = function(value, low, high) {\n    if (value < low) {\n      return low;\n    }\n    if (value > high) {\n      return high;\n    }\n    return value;\n  };\n\n  var positionA = this.entity.components.physics.position;\n  var positionB = entity.components.physics.position;\n  var sizeB = entity.components.collisions.size;\n\n  var closest = {\n    x: clamp(positionA.x, positionB.x - sizeB.x / 2,\n             positionB.x + sizeB.x / 2),\n    y: clamp(positionA.y, positionB.y - sizeB.y / 2,\n             positionB.y + sizeB.y / 2)\n  };\n\n\n  var radiusA = this.radius;\n\n  var diff = {x: positionA.x - closest.x,\n              y: positionA.y - closest.y};\n\n  var distanceSquared = diff.x * diff.x + diff.y * diff.y;\n  return distanceSquared < radiusA * radiusA;\n};\n\nmodule.exports = RectCollisionComponent;\n","'use strict';\n\nvar BurdGraphicsComponent = function (entity) {\n  this.entity = entity;\n};\n\nBurdGraphicsComponent.prototype.draw = function (context) {\n  var position = this.entity.components.physics.position;\n\n  context.save();\n  context.translate(position.x, position.y);\n  context.beginPath();\n  context.arc(0, 0.5, this.entity.radius, 0, 2 * Math.PI);\n  context.fill();\n  context.closePath();\n  context.restore();\n};\n\nmodule.exports = BurdGraphicsComponent;\n","'use strict';\n\nvar PipeGraphicsComponent = function (entity) {\n  this.entity = entity;\n};\n\nPipeGraphicsComponent.prototype.draw = function (context) {\n  var position = this.entity.components.physics.position,\n      width = this.entity.width,\n      height = this.entity.height,\n      gap = this.entity.gap;\n\n  context.save();\n  context.translate(position.x - (width / 2), 0);\n  context.fillStyle = 'green';\n  context.fillRect(position.x, position.y, width, height);\n  context.restore();\n};\n\nmodule.exports = PipeGraphicsComponent;\n","'use strict';\n\nvar PhysicsComponent = function (entity) {\n  this.entity = entity;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n  this.velocity = {\n    x: 0,\n    y: 0\n  };\n  this.acceleration = {\n    x: 0,\n    y: 0\n  };\n};\n\nPhysicsComponent.prototype.update = function (delta) {\n  this.velocity.x += this.acceleration.x * delta;\n  this.velocity.y += this.acceleration.y * delta;\n\n  this.position.x += this.velocity.x * delta;\n  this.position.y += this.velocity.y * delta;\n};\n\nmodule.exports = PhysicsComponent;\n","'use strict';\n\nvar BurdGraphicsComponent = require('../components/graphics/burd'),\n    PhysicsComponent = require('../components/physics/physics'),\n    CircleCollisionComponent = require('../components/collisions/circle');\n\nvar Burd = function () {\n  this.radius = 0.02;\n\n  this.components = {\n    graphics: new BurdGraphicsComponent(this),\n    physics: new PhysicsComponent(this),\n    collisions: new CircleCollisionComponent(this, this.radius)\n  };\n\n  this.components.physics.position.y = 0.5;\n  this.components.physics.acceleration.y = -2;\n  this.components.collisions.onCollision = this.onCollision.bind(this);\n};\n\nBurd.prototype.onCollision = function (entity) {\n  console.log('Burd collided with entity:', entity);\n};\n\nmodule.exports = Burd;\n","'use strict';\n\nvar PipeGraphicsComponent = require('../components/graphics/pipe'),\n    PhysicsComponent = require('../components/physics/physics'),\n    RectCollisionComponent = require('../components/collisions/rectangle');\n\nvar Pipe = function (startX, startY, height) {\n  this.height = height;\n  this.width = 0.15;\n\n  this.components = {\n    graphics: new PipeGraphicsComponent(this),\n    physics: new PhysicsComponent(this),\n    collisions: new RectCollisionComponent(this, {x: this.width, y: this.height})\n  };\n\n  this.components.physics.position.x = startX + (this.width / 2);\n  this.components.physics.position.y = startY;\n  this.components.physics.velocity.x = -0.3;\n  this.components.collisions.onCollision = this.onCollision.bind(this);\n};\n\nPipe.prototype.onCollision = function (entity) {\n  console.log('Pipe collided with entity:', entity);\n};\n\nmodule.exports = Pipe;\n","'use strict';\n\nvar GraphicsSystem = require('./systems/graphics'),\n    PhysicsSystem = require('./systems/physics'),\n    InputSystem = require('./systems/input'),\n    ObstacleSystem = require('./systems/obstacles'),\n    Burd = require('./entities/burd');\n\nvar FlappityBurd = function(canvas) {\n  this.entities = [new Burd()];\n  this.graphics = new GraphicsSystem(this.entities, canvas);\n  this.physics = new PhysicsSystem(this.entities);\n  this.input = new InputSystem(this.entities, canvas);\n  this.obstacles = new ObstacleSystem(this.entities, canvas);\n};\n\nFlappityBurd.prototype.run = function () {\n  this.graphics.run();\n  this.physics.run();\n  this.input.run();\n  this.obstacles.run();\n};\n\nmodule.exports = FlappityBurd;\n","'use strict';\n\nvar FlappityBurd = require('./flappity-burd');\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var canvas = document.getElementById('main-canvas'),\n      app = new FlappityBurd(canvas);\n  app.run();\n});\n","'use strict';\n\nvar CollisionSystem = function(entities) {\n  this.entities = entities;\n};\n\nCollisionSystem.prototype.tick = function() {\n  for (var i=0; i<this.entities.length; i++) {\n    var entityA = this.entities[i];\n    if (!'collision' in entityA.components) {\n      continue;\n    }\n\n    for (var j=i+1; j<this.entities.length; j++) {\n      var entityB = this.entities[j];\n      if (!'collisions' in entityB.components) {\n        continue;\n      }\n\n      if (!entityA.components.collisions.collidesWith(entityB)) {\n        continue;\n      }\n\n      if (entityA.components.collisions.onCollision) {\n        entityA.components.collisions.onCollision(entityB);\n      }\n\n      if (entityB.components.collisions.onCollision) {\n        entityB.components.collisions.onCollision(entityA);\n      }\n    }\n  }\n};\n\nmodule.exports = CollisionSystem;\n","'use strict';\n\nvar GraphicsSystem = function (entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n  this.context = canvas.getContext('2d');\n};\n\nGraphicsSystem.prototype.run = function () {\n  var tick = this.tick.bind(this);\n  (function recur() {\n    global.requestAnimationFrame((t) => {\n      tick(t, recur);\n    });\n  })();\n};\n\nGraphicsSystem.prototype.tick = function (t, cb) {\n  // Blank slate.\n  if (this.canvas.width !== this.canvas.offsetWith ||\n      this.canvas.height !== this.canvas.offsetHeight) {\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n  }\n  this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  this.context.save();\n  this.context.translate(this.canvas.width / 2, this.canvas.height);\n  this.context.scale(this.canvas.height, -this.canvas.height);\n\n  // Render.\n  this.entities.forEach((entity) => {\n    if (!entity.components || !entity.components.graphics) { return; }\n    entity.components.graphics.draw(this.context);\n  });\n\n  this.context.restore();\n\n  cb();\n};\n\nmodule.exports = GraphicsSystem;\n","'use strict';\n\nvar InputSystem = function (entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n};\n\nInputSystem.prototype.run = function () {\n  this.canvas.addEventListener('click', this.onClick.bind(this));\n  this.canvas.addEventListener('touchstart', this.onTouchStart.bind(this));\n  this.canvas.addEventListener('touchend', this.onTouchEnd.bind(this));\n  this.canvas.addEventListener('touchmove', this.onTouchMove.bind(this));\n  this.canvas.addEventListener('touchcancel', this.onTouchCancel.bind(this));\n};\n\nInputSystem.prototype.onClick = function () {\n  var burd = this.entities[0];\n  burd.components.physics.velocity.y = 0.5;\n};\n\nInputSystem.prototype.onTouchStart = function (evt) {\n  evt.preventDefault();\n  this.touching || this.onClick();\n  this.touching = true;\n};\n\nInputSystem.prototype.onTouchEnd = function (evt) {\n  evt.preventDefault();\n  this.touching = false;\n};\n\nInputSystem.prototype.onTouchMove = function (evt) {\n  evt.preventDefault();\n};\n\nInputSystem.prototype.onTouchCancel = function (evt) {\n  evt.preventDefault();\n  this.touching = false;\n};\n\nmodule.exports = InputSystem;\n","'use strict';\n\nvar Pipe = require('../entities/pipe');\n\nvar ObstacleSystem = function (entities, canvas) {\n  this.entities = entities;\n  this.canvas = canvas;\n};\n\nObstacleSystem.prototype.run = function () {\n  window.setInterval(this.tick.bind(this), 1000 * 2);\n};\n\nObstacleSystem.prototype.tick = function () {\n  var aspectRatio = this.canvas.width / 2 / this.canvas.height,\n      height = Math.random(),\n      gap = 0.15;\n  this.entities.push(new Pipe(aspectRatio, 0, height));\n  this.entities.push(new Pipe(aspectRatio, height + gap, 1 - (height + gap)));\n  this.entities.forEach((ent, i) => {\n    if (ent.components.physics.position.x < -aspectRatio) {\n      this.entities.splice(i, 1);\n    }\n  });\n};\n\nmodule.exports = ObstacleSystem;\n","'use strict';\n\nvar CollisionSystem = require('./collisions');\n\nvar PhysicsSystem = function (entities) {\n  this.entities = entities;\n  this.collisions = new CollisionSystem(entities);\n};\n\nPhysicsSystem.prototype.run = function () {\n  window.setInterval(this.tick.bind(this), 1000 / 60);\n};\n\nPhysicsSystem.prototype.tick = function () {\n  this.entities.forEach((entity) => {\n    if (!entity.components || !entity.components.physics) { return; }\n    entity.components.physics.update(1/60);\n  });\n  this.collisions.tick();\n};\n\nmodule.exports = PhysicsSystem;\n"],"sourceRoot":"/source/"}